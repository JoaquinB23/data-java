Sobrecarga

ğŸ”¹ Â¿QuÃ© es la sobrecarga?

La sobrecarga consiste en tener varios mÃ©todos con el mismo nombre en la misma clase, pero con distintos parÃ¡metros (tipo, cantidad u orden).

ğŸ‘‰ Sirve para que un mÃ©todo pueda adaptarse a distintos tipos de datos o situaciones, sin necesidad de inventar un nombre nuevo para cada caso.

ğŸ”¹ Reglas de la sobrecarga

Mismo nombre de mÃ©todo.

ParÃ¡metros diferentes:

Diferente tipo,

Diferente nÃºmero, o

Diferente orden.

Tipo de retorno no es suficiente para sobrecargar.

Ocurre dentro de la misma clase (no requiere herencia).

ğŸ”¹ Ejemplo bÃ¡sico
class Calculadora {

    // Suma de dos enteros
    int sumar(int a, int b) {
        return a + b;
    }

    // Suma de tres enteros
    int sumar(int a, int b, int c) {
        return a + b + c;
    }

    // Suma de dos nÃºmeros decimales
    double sumar(double a, double b) {
        return a + b;
    }
}

public class Main {
    public static void main(String[] args) {
        Calculadora calc = new Calculadora();

        System.out.println(calc.sumar(2, 3));       // 5
        System.out.println(calc.sumar(1, 2, 3));    // 6
        System.out.println(calc.sumar(2.5, 3.7));   // 6.2
    }
}


ğŸ‘‰ Como ves, todos los mÃ©todos se llaman sumar, pero Java selecciona cuÃ¡l usar segÃºn los parÃ¡metros que le pases.

ğŸ”¹ Diferencia clave: Sobrecarga vs Sobreescritura
CaracterÃ­stica	Sobrecarga (Overloading)	Sobreescritura (Overriding)
Clase	Misma clase	Subclase
MÃ©todo	Mismo nombre, distintos parÃ¡metros	Mismo nombre, mismos parÃ¡metros
Tipo de retorno	Puede cambiar	Debe ser igual o compatible
Polimorfismo	CompilaciÃ³n	EjecuciÃ³n