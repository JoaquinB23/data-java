üîπ ¬øQu√© es una clase abstracta?

Es una clase que no se puede instanciar directamente (no se pueden crear objetos de ella).

Se usa como plantilla para que otras clases la hereden.

Puede contener:

M√©todos abstractos (sin implementaci√≥n, obligan a las subclases a definirlos).

M√©todos normales (con c√≥digo).

Atributos y constructores (s√≠, tambi√©n puede tener).

SINTAXIS BASICA:
abstract class Figura {
    // Atributo
    String color;

    // M√©todo abstracto (sin cuerpo)
    abstract double calcularArea();

    // M√©todo normal
    void mostrarColor() {
        System.out.println("Color: " + color);
    }
}




USO EN SUBCLASES: 
class Circulo extends Figura {
    double radio;

    Circulo(String color, double radio) {
        this.color = color;
        this.radio = radio;
    }

    // Implementaci√≥n obligatoria del m√©todo abstracto
    @Override
    double calcularArea() {
        return Math.PI * radio * radio;
    }
}

public class Main {
    public static void main(String[] args) {
        Figura f = new Circulo("Rojo", 5);
        f.mostrarColor();  // M√©todo heredado
        System.out.println("√Årea: " + f.calcularArea());
    }
}


üîπ Diferencias con una interfaz
Clase Abstracta	Interfaz
Puede tener atributos	Solo constantes (public static final)
Puede tener m√©todos abstractos y normales	M√©todos abstractos o default
Herencia simple (una sola clase padre)	Una clase puede implementar m√∫ltiples interfaces
Ideal para compartir c√≥digo com√∫n	Ideal para definir contratos de comportamiento