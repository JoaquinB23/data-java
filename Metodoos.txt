ğŸ“˜ Resumen: MÃ©todos en Java
ğŸ”¹ Â¿QuÃ© es un mÃ©todo?

Un mÃ©todo es un bloque de cÃ³digo reutilizable que realiza una tarea.

Se define dentro de una clase y puede ser invocado por sus objetos (instancias).

Permite dividir el cÃ³digo en partes mÃ¡s pequeÃ±as, organizadas y reutilizables.



ğŸ”¹ Sintaxis de un mÃ©todo
modificadorDeAcceso tipoDeRetorno nombreMetodo(parÃ¡metros) {
    // cuerpo del mÃ©todo
    return valor; // (si no es void)
}

Ejemplo:

class Calculadora {
    // MÃ©todo que retorna un valor
    int sumar(int a, int b) {
        return a + b;
    }

    // MÃ©todo sin retorno (void)
    void saludar() {
        System.out.println("Hola desde la calculadora!");
    }
}



ğŸ”¹ Tipos de mÃ©todos

SegÃºn retorno:

Con retorno â†’ devuelven un valor (int, double, String, etc.).

Sin retorno (void) â†’ solo ejecutan cÃ³digo.

SegÃºn si usan parÃ¡metros:

Con parÃ¡metros â†’ reciben datos externos.

Sin parÃ¡metros â†’ ejecutan sin necesidad de datos de entrada.

Especiales en Java:

Constructores â†’ se ejecutan al crear una instancia (new).

MÃ©todos static â†’ pertenecen a la clase y no a una instancia.

MÃ©todos final â†’ no pueden ser sobreescritos.

MÃ©todos abstractos â†’ se declaran en clases abstractas o interfaces, pero no tienen cuerpo.



ğŸ”¹ Ejemplo completo
class Persona {
    String nombre;

    // Constructor
    Persona(String n) {
        nombre = n;
    }

    // MÃ©todo con retorno
    String getNombre() {
        return nombre;
    }

    // MÃ©todo sin retorno
    void saludar() {
        System.out.println("Hola, soy " + nombre);
    }

    // MÃ©todo estÃ¡tico
    static void info() {
        System.out.println("Esta es la clase Persona");
    }
}

public class Main {
    public static void main(String[] args) {
        Persona p = new Persona("Ana");
        p.saludar();                  // Hola, soy Ana
        System.out.println(p.getNombre()); // Ana
        Persona.info();               // mÃ©todo estÃ¡tico
    }
}



ğŸ”¹ Beneficios

âœ… Permiten reutilizaciÃ³n de cÃ³digo.
âœ… Mejoran la organizaciÃ³n y legibilidad.
âœ… Facilitan la modularidad y el mantenimiento.

âœ… Resumen 

Un mÃ©todo es un bloque de cÃ³digo en una clase que puede ejecutarse al ser invocado.

Puede tener parÃ¡metros y retornar un valor.

Puede ser static, final, o abstract.

Los mÃ©todos permiten reutilizaciÃ³n y modularidad en la programaciÃ³n.
