ğŸ“˜ Resumen: Interfaces en Java
ğŸ”¹ Â¿QuÃ© es una interfaz?

Una interfaz en Java es un contrato que define mÃ©todos abstractos (sin implementaciÃ³n) y constantes.

Las clases que la implementan estÃ¡n obligadas a definir esos mÃ©todos.

Sirve para lograr abstracciÃ³n total y polimorfismo.

ğŸ”¹ Sintaxis bÃ¡sica
// DefiniciÃ³n de interfaz
interface Animal {
    void hacerSonido();   // mÃ©todo abstracto (implÃ­citamente public y abstract)
}

// ImplementaciÃ³n en clase
class Perro implements Animal {
    @Override
    public void hacerSonido() {
        System.out.println("Guau guau");
    }
}

class Gato implements Animal {
    @Override
    public void hacerSonido() {
        System.out.println("Miau miau");
    }
}

public class Main {
    public static void main(String[] args) {
        Animal a1 = new Perro();  // polimorfismo
        Animal a2 = new Gato();

        a1.hacerSonido();  // Guau guau
        a2.hacerSonido();  // Miau miau
    }
}



ğŸ”¹ CaracterÃ­sticas principales

Una interfaz puede tener:

MÃ©todos abstractos (sin cuerpo).

MÃ©todos default (con implementaciÃ³n por defecto).

MÃ©todos estÃ¡ticos (accesibles desde la interfaz).

Constantes (public static final por defecto).

Una clase puede implementar mÃºltiples interfaces (soluciÃ³n a la herencia mÃºltiple).

Desde Java 8 â†’ se permiten mÃ©todos default y static.

Desde Java 9 â†’ se permiten mÃ©todos privados en interfaces.




ğŸ”¹ Ejemplo con default y static
interface Vehiculo {
    void arrancar();

    default void frenar() {
        System.out.println("El vehÃ­culo se detiene.");
    }

    static void info() {
        System.out.println("Interfaz Vehiculo");
    }
}

class Auto implements Vehiculo {
    @Override
    public void arrancar() {
        System.out.println("El auto arranca.");
    }
}

public class Main {
    public static void main(String[] args) {
        Auto a = new Auto();
        a.arrancar();
        a.frenar();      // mÃ©todo default
        Vehiculo.info(); // mÃ©todo static
    }
}



ğŸ”¹ Beneficios

âœ… Permiten abstracciÃ³n total.
âœ… Hacen posible la herencia mÃºltiple de comportamiento.
âœ… Favorecen el polimorfismo y la reutilizaciÃ³n.

âœ… Resumen corto

Una interfaz en Java define un conjunto de mÃ©todos abstractos y constantes que una clase debe implementar.

Se usa con implements.

Permite polimorfismo y herencia mÃºltiple.

Desde Java 8 soporta mÃ©todos default y static.