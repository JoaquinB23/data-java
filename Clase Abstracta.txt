Clase Abstracta


üîπ ¬øQu√© es una clase abstracta?

Una clase abstracta en Java es una clase que no puede ser instanciada directamente (no pod√©s crear objetos a partir de ella).
Se usa como base para que otras clases hereden de ella.

Sirve para:

Definir atributos y m√©todos comunes.

Declarar m√©todos abstractos (sin cuerpo) que las subclases deben implementar.

üîπ Caracter√≠sticas principales

Se declara con la palabra clave abstract.

abstract class Animal { }


Puede contener:

M√©todos abstractos (sin implementaci√≥n).

M√©todos normales (con c√≥digo).

No se puede instanciar:

Animal a = new Animal(); // ‚ùå ERROR


Se hereda con extends y la subclase debe implementar los m√©todos abstractos.

üîπ Ejemplo b√°sico
// Clase abstracta
abstract class Animal {
    String nombre;

    // M√©todo abstracto (sin cuerpo)
    abstract void hacerSonido();

    // M√©todo normal
    void dormir() {
        System.out.println(nombre + " est√° durmiendo...");
    }
}

// Subclase concreta
class Perro extends Animal {
    // Implementamos el m√©todo abstracto
    @Override
    void hacerSonido() {
        System.out.println("Guau guau!");
    }
}

// Programa principal
public class Main {
    public static void main(String[] args) {
        // Animal a = new Animal(); // ‚ùå No se puede
        Perro p = new Perro();
        p.nombre = "Firulais";
        p.hacerSonido(); // Guau guau!
        p.dormir();      // Firulais est√° durmiendo...
    }
}

üîπ Diferencia entre clase abstracta e interfaz
Clase abstracta	Interfaz
Puede tener atributos y m√©todos con implementaci√≥n.	Solo m√©todos abstractos (desde Java 8 tambi√©n m√©todos default y static).
Una clase solo puede heredar de una clase abstracta (herencia simple).	Una clase puede implementar m√∫ltiples interfaces.
Uso: cuando varias clases comparten c√≥digo base.	Uso: cuando quer√©s definir solo un contrato com√∫n.